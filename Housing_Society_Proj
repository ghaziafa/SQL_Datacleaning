
select top 3 * from Avacado_Proj.dbo.national_housing

--standardize date format

alter table Avacado_Proj.dbo.national_housing
add saledateconverted1 date; 

select saledateconverted1, CONVERT(date, SaleDate)
from Avacado_Proj.dbo.national_housing

update Avacado_Proj.dbo.national_housing
set saledateconverted1 = CONVERT(date, saledate)

--populate property address data

 select * from Avacado_Proj.dbo.national_housing
 where propertyaddress is null
 order by parcelID
 select a.parcelID, a.propertyaddress, b.ParcelID, b.propertyaddress, isnull(a.propertyaddress, b.propertyaddress)
 from  Avacado_Proj.dbo.national_housing a
 join  Avacado_Proj.dbo.national_housing b
 on a.parcelID = b.parcelID
 AND a.[UniqueID ] <> b.[UniqueID ]
 where a.propertyaddress is null

 update a
 set PropertyAddress = isnull(a.propertyaddress, b.propertyaddress)
 from dbo.national_housing a
 join dbo.national_housing b
 on a.ParcelID = b.ParcelID
 and a.[UniqueID ] =b.[UniqueID ]
 where a.PropertyAddress is null

 --droping columns
 alter table dbo.national_housing
 drop column saledateconverted;
 select top 3* from dbo.national_housing

 --created individual columns for address

 --select propertyaddress from dbo.national_housing
 select substring(propertyaddress, 1, charindex(',',propertyaddress) -1) as address
 , SUBSTRING(propertyaddress, charindex(',',propertyaddress) +1, len(propertyaddress)) as address
 from dbo.national_housing

 alter table national_housing
 add property_split_address Nvarchar(200);
 update national_housing
 set property_split_address = substring(propertyaddress, 1, charindex(',',propertyaddress) -1)

 alter table national_housing
 add property_split_city Nvarchar(200);

 update national_housing
 set property_split_city = SUBSTRING(PropertyAddress, CHARINDEX(',', propertyaddress) + 1, len(propertyaddress))

 select * from national_housing

 --spliting owneraddress seperatly

select owneraddress from national_housing

select  
parsename(replace(owneraddress, ',', '.'), 3)
, parsename(replace(owneraddress, ',', '.'), 2)
, parsename(replace(owneraddress, ',', '.'), 1)
from national_housing

alter table national_housing
add ownerhousenumber Nvarchar(200);
update national_housing
set ownerhousenumber = parsename(replace(owneraddress, ',','.'),3)

alter table national_housing
add ownercity Nvarchar(200);
update national_housing
set ownercity = parsename(replace(owneraddress, ',','.'),2)


alter table national_housing
add ownerstate Nvarchar(200);
update national_housing
set ownerstate = parsename(replace(owneraddress, ',','.'),1)

select * from national_housing

-- Change Y and N to Yes and No in "Sold as Vacant" field

select distinct(SoldAsVacant), count(soldasvacant) from national_housing
group by SoldAsVacant
order by 2 

Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From national_housing

update national_housing
set SoldAsVacant = case when SoldAsVacant = 'Y' then 'yes'
when SoldAsVacant = 'N' THEN 'No'
else SoldAsVacant
end

select * from national_housing

--removing duplicate columns

ALTER TABLE national_housing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate

select * from national_housing

--removing duplicates
